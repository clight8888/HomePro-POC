HomePro Application - EC2 Deployment with RDS MySQL
====================================================

DEPLOYMENT PACKAGE: homepro_ec2_with_env.zip
SIZE: 2.4 MB
INCLUDES: .env file with RDS MySQL configuration

PREREQUISITES:
- Ubuntu/Amazon Linux EC2 instance
- Python 3.8+ installed
- pip installed
- sudo access
- RDS MySQL instance accessible from EC2

DEPLOYMENT STEPS:

1. UPLOAD AND EXTRACT:
   # Upload the zip file to your EC2 instance
   scp homepro_ec2_with_env.zip ec2-user@your-ec2-ip:~/
   
   # SSH into your EC2 instance
   ssh ec2-user@your-ec2-ip
   
   # Extract the files
   unzip homepro_ec2_with_env.zip
   cd homepro_ec2_with_env/

2. INSTALL DEPENDENCIES:
   # Update system packages
   sudo yum update -y  # For Amazon Linux
   # OR
   sudo apt update && sudo apt upgrade -y  # For Ubuntu
   
   # Install Python and pip if not already installed
   sudo yum install python3 python3-pip -y  # Amazon Linux
   # OR
   sudo apt install python3 python3-pip -y  # Ubuntu
   
   # Create virtual environment
   python3 -m venv venv
   source venv/bin/activate
   
   # Install Python dependencies
   pip install -r requirements.txt

3. VERIFY ENVIRONMENT CONFIGURATION:
   # Check that .env file is present and contains RDS settings
   cat .env
   
   # Should show:
   # FLASK_ENV=production
   # DB_HOST=homepro-mysql-db.c0zi8ey8usr4.us-east-1.rds.amazonaws.com
   # DB_PORT=3306
   # DB_NAME=homeprodb
   # DB_USERNAME=homeproadmin
   # DB_PASSWORD=YourSecurePassword123
   # AWS_REGION=us-east-1
   # AWS_S3_BUCKET=homepro-uploads

4. TEST DATABASE CONNECTION:
   # Test if you can connect to RDS from EC2
   python3 -c "
   import pymysql
   import os
   from dotenv import load_dotenv
   load_dotenv()
   try:
       conn = pymysql.connect(
           host=os.getenv('DB_HOST'),
           user=os.getenv('DB_USERNAME'),
           password=os.getenv('DB_PASSWORD'),
           db=os.getenv('DB_NAME'),
           port=int(os.getenv('DB_PORT', 3306))
       )
       print('✅ Database connection successful!')
       conn.close()
   except Exception as e:
       print(f'❌ Database connection failed: {e}')
   "

5. INITIALIZE DATABASE:
   # Run database migration to create tables
   python3 migrate_database.py

6. RUN APPLICATION:
   # For testing (development mode):
   python3 app.py
   
   # For production (recommended):
   pip install gunicorn
   gunicorn -w 4 -b 0.0.0.0:8000 application:application

7. CONFIGURE FIREWALL:
   # Allow HTTP traffic on port 8000
   sudo ufw allow 8000  # Ubuntu
   # OR configure security group in AWS Console to allow port 8000

TROUBLESHOOTING:

If you get "Connection refused" errors:

1. CHECK SECURITY GROUPS:
   - Ensure your EC2 security group allows outbound traffic on port 3306
   - Ensure your RDS security group allows inbound traffic on port 3306 from EC2

2. CHECK RDS ENDPOINT:
   - Verify the DB_HOST in .env matches your actual RDS endpoint
   - Check if RDS instance is running and accessible

3. CHECK NETWORK CONNECTIVITY:
   # Test if you can reach the RDS endpoint
   telnet homepro-mysql-db.c0zi8ey8usr4.us-east-1.rds.amazonaws.com 3306
   
   # Or use nslookup to verify DNS resolution
   nslookup homepro-mysql-db.c0zi8ey8usr4.us-east-1.rds.amazonaws.com

4. CHECK CREDENTIALS:
   - Verify DB_USERNAME and DB_PASSWORD are correct
   - Ensure the database user has proper permissions

5. INSTALL MYSQL CLIENT (optional for debugging):
   sudo yum install mysql -y  # Amazon Linux
   # OR
   sudo apt install mysql-client -y  # Ubuntu
   
   # Test direct connection
   mysql -h homepro-mysql-db.c0zi8ey8usr4.us-east-1.rds.amazonaws.com -u homeproadmin -p homeprodb

INCLUDED FILES:
- app.py (Main Flask application)
- application.py (WSGI entry point)
- auth.py (Authentication module)
- config.py (Configuration settings)
- migrate_database.py (Database migration script)
- requirements.txt (Python dependencies including PyMySQL)
- static/ (CSS, JS, and static files)
- templates/ (HTML templates)
- uploads/ (File upload directory)
- .env (Environment variables with RDS configuration)

SECURITY NOTES:
- The .env file contains sensitive database credentials
- Ensure proper file permissions: chmod 600 .env
- Use HTTPS in production
- Configure proper firewall rules
- Set up proper backup procedures for RDS

ACCESS YOUR APPLICATION:
Once running, access your application at:
- http://your-ec2-public-ip:8000
- Or http://172.31.89.72:8000 (your internal IP)

For support, refer to the application documentation or contact the development team.